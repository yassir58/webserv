
TASKS :
--> handle error = too many open files (accept) []
--> handle connection timeout []
--> handle buffer_size problems []
--> reimplement the connections algorithm using the epoll or kqueue sys call and using a list of fds instead of an array [x]
--> handle server overload (server out of memory or out of fds) []
--> integrate config parse with webserv core [x]
--> handle multiple server instances listening on the same port the first server block will bind to port and the others will be ignored [x]
--> add support for ipv6 [x]
--> handle errors -1 and 0 for send and recieve []
--> handle Connection request timeout []
--> integrate request parse with webserv core []
**

TESTS :

test server responsivness using curl to fetch large files 
test server load using siege -b -t{for test tile} -c{for concurrent users}
test server response time using [ab]
test server's large file handling using httperf 


READ LIST :

the difference between host-name and server-name []
how nginx handle multiple server instances []
read about virtual hosts (server blocks) []:
- https://www.keycdn.com/support/nginx-virtual-host
- https://en.wikipedia.org/wiki/Virtual_hosting
what is server_name and how it works []
read about serevr block selection algorithm [];

INFO :

using SO_REUSADDR to prevent bind () error after server crash , because the socket goes to TIME_WAIT state before the operating system claim it back.


// server location selection algorithm :

kevent ident (fd) filte (event | EVFILT_READ| EVFILT_WRITE) flags add event to kqueue EV_ADD delete event with EV_DELETE

kevent ev;

EV_SET(&ev, sckfd, EVFILT_READ, EV_ADD, 0, 0, 0);



Connection reset by peer => server writes or closed its end of the socket without or befores reading from socket


// testing GET on /
// testing GET on on listDirectory
echo -e ""


/// problems

location /
